package page.tests;

import java.util.concurrent.TimeUnit;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.AfterTest;
import org.testng.annotations.Test;
import org.testng.asserts.SoftAssert;

import page.object.ReadFile;
import page.object.EngineStart;
import page.object.NavigationBar;
import page.object.Registration;

public class RegistrationShould {
	WebDriver driver;
	EngineStart start = new EngineStart(driver, ReadFile.readUrls());

	public EngineStart launchBrowser() {
		System.setProperty("webdriver.chrome.driver", "chromedriver.exe");
		driver = new ChromeDriver();
		driver.manage().window().maximize();
		driver.manage().timeouts().implicitlyWait(3, TimeUnit.SECONDS);
		start.logInPage(driver);
		return start;
	}

	@Test
	public void notRegisterWithoutData() {
		launchBrowser();
		Registration register = new Registration(driver, ReadFile.readXPaths());
		register.clickSignUp();

		SoftAssert checkOut = new SoftAssert();
		checkOut.assertNotEquals(driver.getCurrentUrl(), "https://sandbox.2checkout.com/sandbox/home/dashboard");
		checkOut.assertFalse(driver.getCurrentUrl().contains(start.getUrlProfileHomePage()));

		checkOut.assertAll();
		//utility.ExcelUtils.closeExcell();
		//driver.quit();
	}
	
	@Test
	public void notRegisterWithoutUsername() {
		launchBrowser();
		Registration register = new Registration(driver, ReadFile.readXPaths());
		utility.ExcelUtils.setExcell("src\\SignUp_data.xlsx");
		utility.ExcelUtils.setWorkSheet(0);
		register.typeEmail(utility.ExcelUtils.getDataAt(1, 1));
		register.typePassword(utility.ExcelUtils.getDataAt(1, 2));
		register.typeCofirmPassword(utility.ExcelUtils.getDataAt(1, 2));
		register.chooseHaveWebsite("www.website.com");
		register.clickSignUp();
		
		SoftAssert checkOut = new SoftAssert();
		checkOut.assertNotEquals(driver.getCurrentUrl(), "https://sandbox.2checkout.com/sandbox/home/dashboard");
		checkOut.assertFalse(driver.getCurrentUrl().contains(start.getUrlProfileHomePage()));
		
		checkOut.assertAll();
		//utility.ExcelUtils.closeExcell();
		//driver.quit();
	}
	
	@Test
	public void notRegisterWithoutEmail() {
		launchBrowser();
		Registration register = new Registration(driver, ReadFile.readXPaths());
		utility.ExcelUtils.setExcell("src\\SignUp_data.xlsx");
		utility.ExcelUtils.setWorkSheet(0);
		register.typeUsername(utility.ExcelUtils.getDataAt(1, 0));
		register.typePassword(utility.ExcelUtils.getDataAt(1, 2));
		register.typeCofirmPassword(utility.ExcelUtils.getDataAt(1, 2));
		register.chooseHaveWebsite("www.website.com");
		register.clickSignUp();
		
		SoftAssert checkOut = new SoftAssert();
		checkOut.assertNotEquals(driver.getCurrentUrl(), "https://sandbox.2checkout.com/sandbox/home/dashboard");
		checkOut.assertFalse(driver.getCurrentUrl().contains(start.getUrlProfileHomePage()));
		
		checkOut.assertAll();
		//utility.ExcelUtils.closeExcell();
		//driver.quit();
	}
	
	@Test
	public void notRegisterWithoutPassword() {
		launchBrowser();
		Registration register = new Registration(driver, ReadFile.readXPaths());
		utility.ExcelUtils.setExcell("src\\SignUp_data.xlsx");
		utility.ExcelUtils.setWorkSheet(0);
		register.typeUsername(utility.ExcelUtils.getDataAt(1, 0));
		register.typeEmail(utility.ExcelUtils.getDataAt(1, 1));
		register.typeCofirmPassword(utility.ExcelUtils.getDataAt(1, 2));
		register.chooseHaveWebsite("www.website.com");
		register.clickSignUp();
		
		SoftAssert checkOut = new SoftAssert();
		checkOut.assertNotEquals(driver.getCurrentUrl(), "https://sandbox.2checkout.com/sandbox/home/dashboard");
		checkOut.assertFalse(driver.getCurrentUrl().contains(start.getUrlProfileHomePage()));
		
		checkOut.assertAll();
		//utility.ExcelUtils.closeExcell();
		//driver.quit();
	}
	
	@Test
	public void notRegisterWithoutConfirmPassword() {
		launchBrowser();
		Registration register = new Registration(driver, ReadFile.readXPaths());
		utility.ExcelUtils.setExcell("src\\SignUp_data.xlsx");
		utility.ExcelUtils.setWorkSheet(0);
		register.typeUsername(utility.ExcelUtils.getDataAt(1, 0));
		register.typeEmail(utility.ExcelUtils.getDataAt(1, 1));
		register.typePassword(utility.ExcelUtils.getDataAt(1, 2));
		register.chooseHaveWebsite("www.website.com");
		register.clickSignUp();
		
		SoftAssert checkOut = new SoftAssert();
		checkOut.assertNotEquals(driver.getCurrentUrl(), "https://sandbox.2checkout.com/sandbox/home/dashboard");
		checkOut.assertFalse(driver.getCurrentUrl().contains(start.getUrlProfileHomePage()));
		
		checkOut.assertAll();
		//utility.ExcelUtils.closeExcell();
		//driver.quit();
	}

	@Test
	public void notRegisterWithoutCheckingSomethigAboutYou() {
		launchBrowser();
		Registration register = new Registration(driver, ReadFile.readXPaths());
		utility.ExcelUtils.setExcell("src\\SignUp_data.xlsx");
		utility.ExcelUtils.setWorkSheet(0);
		register.typeUsername(utility.ExcelUtils.getDataAt(1, 0));
		register.typeEmail(utility.ExcelUtils.getDataAt(1, 1));
		register.typePassword(utility.ExcelUtils.getDataAt(1, 2));
		register.typeCofirmPassword(utility.ExcelUtils.getDataAt(1, 2));
		register.clickSignUp();
		
		SoftAssert checkOut = new SoftAssert();
		checkOut.assertNotEquals(driver.getCurrentUrl(), "https://sandbox.2checkout.com/sandbox/home/dashboard");
		checkOut.assertFalse(driver.getCurrentUrl().contains(start.getUrlProfileHomePage()));
		
		checkOut.assertAll();
		//utility.ExcelUtils.closeExcell();
		//driver.quit();
	}
	
	@Test
	public void registerOneUser() {
		launchBrowser();
		Registration register = new Registration(driver, ReadFile.readXPaths());
		utility.ExcelUtils.setExcell("src\\SignUp_data.xlsx");
		utility.ExcelUtils.setWorkSheet(0);
		register.typeUsername(utility.ExcelUtils.getDataAt(1, 0));
		register.typeEmail(utility.ExcelUtils.getDataAt(1, 1));
		register.typePassword(utility.ExcelUtils.getDataAt(1, 2));
		register.typeCofirmPassword(utility.ExcelUtils.getDataAt(1, 2));
		register.chooseHaveWebsite("www.website.com");
		register.clickSignUp();
		
		SoftAssert checkOut = new SoftAssert();
		checkOut.assertEquals(driver.getCurrentUrl(), "https://sandbox.2checkout.com/sandbox/home/dashboard");
		checkOut.assertTrue(driver.getCurrentUrl().contains(start.getUrlProfileHomePage()));

		checkOut.assertAll();
		//utility.ExcelUtils.closeExcell();
		//driver.quit();
	}

	@Test
	public void registerMultipleUsers() {
		launchBrowser();		
		start.registrationPage(driver);
		utility.ExcelUtils.setExcell("src\\SignUp_data.xlsx");
		utility.ExcelUtils.setWorkSheet(0);
		
		SoftAssert checkOut = new SoftAssert();

		for (int i = 1; i < utility.ExcelUtils.getRowNumber(); i++) {
			Registration register = new Registration(driver, ReadFile.readXPaths());
			register.typeUsername(utility.ExcelUtils.getDataAt(i, 0));
			register.typeEmail(utility.ExcelUtils.getDataAt(i, 1));
			register.typePassword(utility.ExcelUtils.getDataAt(i, 2));
			register.typeCofirmPassword(utility.ExcelUtils.getDataAt(i, 2));
			
			if (utility.ExcelUtils.getRowNumber() == 1) register.chooseDontHaveWebsite();
			else if (utility.ExcelUtils.getRowNumber() == 2) register.chooseSeveralWebsite();
			else if (utility.ExcelUtils.getRowNumber() == 3) register.chooseAlreadyHaveAccount();
			else register.chooseWantToPlay();

			register.clickSignUp();

			checkOut.assertEquals(driver.getCurrentUrl(), "https://sandbox.2checkout.com/sandbox/home/dashboard");
			checkOut.assertTrue(driver.getCurrentUrl().contains(start.getUrlProfileHomePage()));
			
			NavigationBar profile = new NavigationBar(driver, ReadFile.readXPaths());
			profile.clickAccountAvatar();
			profile.clickLogOut();
			
			if (i < utility.ExcelUtils.getRowNumber() - 1) start.registrationPage(driver);;

		}
		checkOut.assertAll();
		//utility.ExcelUtils.closeExcell();
		//driver.quit();
	}
	
	@AfterTest
	public void close() {
		utility.ExcelUtils.closeExcell();
		driver.close();
	}
}
